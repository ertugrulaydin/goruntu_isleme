import numpy as np
mask0=np.array([1,1,1,1,1,1,1,1,1]).reshape(3,3)
mask0=mask0/9
mask1=np.random.randint(5, size=9).reshape(3,3)
mask2=np.random.randint(5, size=9).reshape(3,3)
print(mask1)
print("-------------")
print(mask2)
print("-------------")
print(mask1mask2)
print("-------------")
print(mask1mask0)

def get_default_mask_for_mean():
return np.array([1,1,1,1,1,1,1,1,1]).reshape(3,3)/9
def apply_mask(part_of_img):
mask=get_default_mask_for_mean()
return sum (sum(part_of_img*mask))

import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import numpy as np
img=mpimg.imread('agac.jpg')
%matplotlib inline

def distance(v,w=[1/3,1/3,1/3]):
a,b,c=v[0],v[1],v[2]
w1,w2,w3=w[0],w[1],w[2]
d=((a2)*w1+(b2)*w2+(c2)*w3).5
return d

def convert_rgb_togray(im_1):
m=im_1.shape[0]
n=im_1.shape[1]
im_2=np.zeros((m,n))
for i in range(m):
for j in range(n):
im_2[i,j]=distance(im_1[i,j,:])
return im_2

im_3=convert_rgb_togray(img)
type(im_3)
plt.imshow(im_3)
plt.imshow(im_3,cmap="gray")

plt.subplot(1,3,1),plt.imshow(img)
plt.subplot(1,3,2),plt.imshow(im_3, cmap="gray")

def get_mean_filt(imm):
m=imm.shape[0]
n=imm.shape[1]
im2=np.zeros((m,n))
for i in range(1,m-1):
for j in range(1,n-1):
poi=imm[i-1:i+2,j-1:j+2]
im2[i,j]=apply_mask(poi)
return im2

im_55=get_mean_filt(im_3)

plt.subplot(1,3,1),plt.imshow(im_3, cmap="gray")
plt.subplot(1,3,2),plt.imshow(im_55, cmap="gray")
